  <div className="grid grid-cols-2 gap-4 md:grid-cols-5">
                  {/* Location */}
                  <div className="relative">
                    <label className="mb-1 block text-sm font-medium text-gray-700">Location</label>
                    <div className="relative">
                      <input
                        type="text"
                        className="w-full rounded-xl border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                        placeholder="Where are you going?"
                        value={location}
                        onChange={e => setLocation(e.target.value)}
                        onClick={() => setIsLocationDropdownOpen(!isLocationDropdownOpen)}
                      />
                      {isLocationDropdownOpen && (
                        <div className="absolute z-10 mt-1 max-h-60 w-full overflow-auto rounded-xl bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5">
                          {locations.map(option => (
                            <div
                              key={option.id}
                              className="cursor-pointer px-4 py-2 hover:bg-gray-100"
                              onClick={() => handleLocationSelect(option.name)}>
                              {option.name}
                            </div>
                          ))}
                        </div>
                      )}
                    </div>
                  </div>

                  {/* Check-in */}
                  <div>
                    <label className="mb-1 block text-sm font-medium text-gray-700">Check in</label>
                    <input
                      type="date"
                      className="w-full rounded-xl border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                      value={checkInDate}
                      onChange={e => setCheckInDate(e.target.value)}
                    />
                  </div>

                  {/* Check-out */}
                  <div>
                    <label className="mb-1 block text-sm font-medium text-gray-700">
                      Check out
                    </label>
                    <input
                      type="date"
                      className="w-full rounded-xl border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                      value={checkOutDate}
                      onChange={e => setCheckOutDate(e.target.value)}
                    />
                  </div>

                  {/* Guests */}
                  <div className="relative">
                    <label className="mb-1 block text-sm font-medium text-gray-700">Guests</label>
                    <div className="relative">
                      <input
                        type="text"
                        className="w-full rounded-xl border border-gray-300 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
                        value={guestCount}
                        readOnly
                        onClick={() => setIsGuestDropdownOpen(!isGuestDropdownOpen)}
                      />
                      {isGuestDropdownOpen && (
                        <div className="absolute z-10 mt-1 w-full rounded-lg bg-white px-4 py-4 text-base shadow-lg ring-1 ring-black ring-opacity-5">
                          <div className="mb-4">
                            <label className="mb-2 block text-sm font-medium text-gray-700">
                              Rooms
                            </label>
                            <div className="flex items-center justify-between">
                              <span className="text-gray-600">
                                {rooms} Room{rooms > 1 ? 's' : ''}
                              </span>
                              <div className="flex items-center space-x-3">
                                <button
                                  className="flex h-8 w-8 items-center justify-center rounded-full border border-gray-300 hover:bg-gray-100"
                                  onClick={() => decrementCount(setRooms, rooms)}>
                                  -
                                </button>
                                <button
                                  className="flex h-8 w-8 items-center justify-center rounded-full border border-gray-300 hover:bg-gray-100"
                                  onClick={() => incrementCount(setRooms, rooms)}>
                                  +
                                </button>
                              </div>
                            </div>
                          </div>

                          <div className="mb-4">
                            <label className="mb-2 block text-sm font-medium text-gray-700">
                              Adults
                            </label>
                            <div className="flex items-center justify-between">
                              <span className="text-gray-600">
                                {adults} Adult{adults > 1 ? 's' : ''}
                              </span>
                              <div className="flex items-center space-x-3">
                                <button
                                  className="flex h-8 w-8 items-center justify-center rounded-full border border-gray-300 hover:bg-gray-100"
                                  onClick={() => decrementCount(setAdults, adults)}>
                                  -
                                </button>
                                <button
                                  className="flex h-8 w-8 items-center justify-center rounded-full border border-gray-300 hover:bg-gray-100"
                                  onClick={() => incrementCount(setAdults, adults)}>
                                  +
                                </button>
                              </div>
                            </div>
                          </div>

                          <div className="mb-4">
                            <label className="mb-2 block text-sm font-medium text-gray-700">
                              Children
                            </label>
                            <div className="flex items-center justify-between">
                              <span className="text-gray-600">{children} Children</span>
                              <div className="flex items-center space-x-3">
                                <button
                                  className="flex h-8 w-8 items-center justify-center rounded-full border border-gray-300 hover:bg-gray-100"
                                  onClick={() => (children > 0 ? setChildren(children - 1) : null)}>
                                  -
                                </button>
                                <button
                                  className="flex h-8 w-8 items-center justify-center rounded-full border border-gray-300 hover:bg-gray-100"
                                  onClick={() => setChildren(children + 1)}>
                                  +
                                </button>
                              </div>
                            </div>
                          </div>

                          <button
                            className="w-full rounded-lg bg-blue-500 py-2 text-white transition-colors hover:bg-blue-600"
                            onClick={handleUpdateGuests}>
                            Apply
                          </button>
                        </div>
                      )}
                    </div>
                  </div>

                  {/*Search*/}
                  <div className="relative">
                    <label className="mb-1 block text-sm font-medium text-gray-700">Search</label>
                    <div className="relative">
                      <button className=" rounded-full">Search</button>
                    </div>
                  </div>
                </div>